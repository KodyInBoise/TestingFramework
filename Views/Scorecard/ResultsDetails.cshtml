@model TestingFramework.ViewModels.Scorecard.ResultsDetailsViewModel

@{
    ViewData["Title"] = "Results";
}

<h1>Scorecard Results</h1>
<hr />

<div>
    <dl class="row">
        <dt class="col-sm-2">
            Name:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => Model.Scorecard.Name)
        </dd>
        <dt class="col-sm-2">
            Description:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Scorecard.Description)
        </dd>
        <dt class="col-sm-2">
            User:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Results.User)
        </dd>
        <dt class="col-sm-2">
            Started:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Results.StartedTimestamp)
        </dd>
        <dt class="col-sm-2">
            Finished:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Results.CompletedTimestamp)
        </dd>
        <dt class="col-sm-2">
            Duration:
        </dt>
        <dd class="col-sm-10">
            @{
                var duration = Model.GetDuration();
            }
            @Html.DisplayFor(model => duration)
        </dd>
        <dt class="col-sm-2">
            Tests Completed:
        </dt>
        <dd class="col-sm-10">
            @{
                var completedString = Model.GetTestsCompletedString();
            }
            @Html.DisplayFor(model => completedString)
        </dd>
        <dt class="col-sm-2">
            Score:
        </dt>
        <dd class="col-sm-10">
            @{
                var score = Model.GetCurrentScore();
            }
            @Html.DisplayFor(model => score)
        </dd>
    </dl>
    <hr />

    <h3 style="float: left">Failed Tests</h3>
    <table class="table">
        @{
            var failedResults = Model.Results.GetTestResults().Where(r => r.Passed == false);
        }
        <thead>
            <tr>
                <th>
                    Description
                </th>
                <th>
                    Expected Result
                </th>
                <th>
                    Notes
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in failedResults)
            {
                var test = Model.GetScorecardTest(item.TestID);
                <tr>
                    <td width="20%">
                        @Html.DisplayFor(modelItem => test.Description)
                    </td>
                    <td width="60%">
                        @Html.DisplayFor(modelItem => test.ExpectedResult)
                    </td>
                    <td width="20%">
                        @Html.DisplayFor(modelItem => item.Notes)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <br />

    <h3 style="float: left">Passed Tests</h3>
    <table class="table">
        @{
            var passedResults = Model.Results.GetTestResults().Where(r => r.Passed == true);
        }
        <thead>
            <tr>
                <th>
                    Description
                </th>
                <th>
                    Expected Result
                </th>
                <th>
                    Notes
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in passedResults)
            {
                var test = Model.GetScorecardTest(item.TestID);
                <tr>
                    <td width="20%">
                        @Html.DisplayFor(modelItem => test.Description)
                    </td>
                    <td width="60%">
                        @Html.DisplayFor(modelItem => test.ExpectedResult)
                    </td>
                    <td width="20%">
                        @Html.DisplayFor(modelItem => item.Notes)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
