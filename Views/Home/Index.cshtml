@using Microsoft.AspNetCore.Identity
@using TestingFramework.Extensions

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


@model TestingFramework.ViewModels.HomeViewModel

@{
    ViewData["Title"] = "Quality Center";
    var defaultTask = Model.UserTasks.FirstOrDefault();
}

<style>
    .action-btn {
        width: 100px;
    }

    .start-btn {
        width: 150px;
    }
</style>

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>
<br />

@if (SignInManager.IsSignedIn(User))
{
    <h3 style="float: left">My Tasks</h3>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => defaultTask.Created)
                </th>
                <th>
                    @Html.DisplayNameFor(model => defaultTask.Description)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.UserTasks)
            {
                <tr>
                    <td width="20%">
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td width="45%">
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td width="20%">
                        @Html.ActionLink("Details", "TaskDetails", new { id = item.ID }, new { @class = "btn btn-sm btn-primary action-btn", @style = "float:right" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <br />

    <h3 style="float: left">Scorecards</h3>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Description
                </th>
                <th>
                    Test Count
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Scorecards)
            {
                var scorecardName = Model.Scorecards.FirstOrDefault(sc => sc.ID == item.ID).Name;
                var testCount = item.Tests.Count();
                <tr>
                    <td width="20%">
                        @Html.DisplayFor(modelItem => scorecardName)
                    </td>
                    <td width="50%">
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td width="10%">
                        @Html.DisplayFor(modelItem => testCount)
                    </td>
                    <td width="20%">
                        @Html.ActionLink("Start", "StartScorecard", "Scorecard", new { id = item.ID }, new { @class = "btn btn-sm btn-success start-btn", @style = "float:right" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <br />
    <h3 style="text-align:center">Please register or sign in to continue.</h3>
}
