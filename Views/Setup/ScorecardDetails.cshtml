@model TestingFramework.ViewModels.Setup.ScorecardDetailsViewModel

@using TestingFramework.Data;

@inject ApplicationDbContext _database;

@{
    ViewData["Title"] = "Scorecard Details";
}

<style>
    .action-btn {
        width: 100px;
    }

    .text-col {
        text-align: center;
    }

    .desc-label {
        font-weight: bold;
        padding-top: 5px;
    }

    .order-input {
        width: 75px;
        margin-left: 10px;
    }

    .update-btn {
        width: 75px;
        margin-bottom: 3px;
        margin-left: 5px;
    }
</style>

<script type="text/javascript">
    var scrollToDiv = '@Model.ScrollToDiv';
    console.log("Scrolling to div " + scrollToDiv);

    window.location.hash = scrollToDiv;

    var scorecardID = '@Model.Scorecard.ID';

    function confirmDelete() {
        if (confirm("Are you sure you want to delete this Scorecard?")) {
            window.location = "/Setup/DeleteScorecard/" + scorecardID;
        }
    }
</script>


<h1>Scorecard Details</h1>
<hr />

<div>
    <dl class="row">
        <dt class="col-sm-2">
            Name
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Scorecard.Name)
        </dd>
        <dt class="col-sm-2">
            Description
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Scorecard.Description)
        </dd>
        <dt class="col-sm-2">
            Test Count
        </dt>
        <dd class="col-sm-10">
            @{
                var testCount = Model.Tests.Count();
            }
            @Html.DisplayFor(model => testCount)
        </dd>
        <dt class="col-sm-2">
            Default Test Value
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(Model => Model.Scorecard.DefaultTestValue)
        </dd>
    </dl>
    <div>
        <input type="button" value="Delete" onclick="confirmDelete()" class="btn btn-danger btn-sm action-btn" style="float:left" />
    </div>
    <div style="float:right">
        @Html.ActionLink("Edit Details", "EditScorecardDetails", new { id = Model.Scorecard.ID }, new { @class = "btn btn-secondary btn-sm action-btn" })
        @Html.ActionLink("Add Tests", "AddScorecardTests", new { id = Model.Scorecard.ID }, new { @class = "btn btn-success btn-sm action-btn" })
    </div>
    <br />
    <hr />
</div>

<br />
<br />
@foreach (var category in Model.Categories)
{
    var categoryTests = Model.GetCategoryTests(category.ID);
    var defaultTest = categoryTests.FirstOrDefault();
    var categoryDivID = $"category-{category.ID}";

    if (categoryTests.Any())
    {
        <div id='@categoryDivID'>
            <h2 style="float:left">@category.Name</h2>
            <br />
            <br />
            <br />

            @foreach (var test in categoryTests)
            {
                var testDivID = $"test-{test.ID}";

                <div id="@testDivID">

                    <label class="desc-label">Description: </label> @test.Description <br />
                    <label class="desc-label">Expected Result: </label> @test.ExpectedResult <br />
                    <label class="desc-label">Value: </label> @test.Value <br />
                    <label class="desc-label">Order: </label>   @test.Order

                    <br />
                    <br />
                    @Html.ActionLink("Edit", "EditScorecardTest", new { id = test.ID },
                        new { @class = "btn btn-primary btn-sm action-btn", @style = "float:right" })
                    @Html.ActionLink("Remove", "RemoveScorecardTest", new { id = test.ID, scorecardID = Model.Scorecard.ID },
                        new { @class = "btn btn-danger btn-sm action-btn", @style = "float:right; margin-right: 10px;" })
                    <br />
                    <hr />
                </div>
            }
            <br />
            <br />
        </div>
    }
}
